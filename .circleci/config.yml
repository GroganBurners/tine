version: 2
jobs:
  build:
    working_directory: ~/tine
    environment:
      CC_TEST_REPORTER_ID: 47d365ee744329d4f4592e8948185c5767ee57d573f01691d51959cff40ce7f7
    docker:
      - image: circleci/python:3.7
        environment:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/gbs
      - image: circleci/postgres:9.6.7
        environment:
          POSTGRES_DB: gbs
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: add user installs to PATH
          command: |
              echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
              echo 'export WORKON_HOME=$HOME/.venvs' >> $BASH_ENV
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Install Requirements
          command: |
            sudo pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "~/.venvs"
            - "~/.local"
      - run:
          name: Collect Static Files
          command: mkdir -p $PWD/staticfiles && python manage.py collectstatic
      - run:
          name: Django Make Migrations
          command: python manage.py makemigrations
      - run:
          name: Django Migrate
          command: python manage.py migrate
      - run:
          name: Django Run Tests
          command: |
             ./cc-test-reporter before-build
             coverage run --source='gbs/' --omit="gbs/migrations/*,gbs/tests/*" manage.py test gbs
             coverage report
             coverage xml
             ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?
      - run:
          name: Generate Code Coverage Report
          command: coverage html
      - store_artifacts:
          path: htmlcov/
          destination: tr1

